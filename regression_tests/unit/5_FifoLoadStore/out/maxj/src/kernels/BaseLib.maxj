package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class BaseLib extends KernelLib {
BaseLib(KernelLib owner) { super(owner); }
      SpatialUtils spatialUtils = new SpatialUtils(this);
DFEVar void1095_done = dfeBool().newInstance(this);
DFEVar void1093_done = dfeBool().newInstance(this);
DFEVar void1093_en = dfeBool().newInstance(this);
DFEVar void1086_done = dfeBool().newInstance(this);
DFEVar void1086_en = dfeBool().newInstance(this);
DFEVar pipe1091_done = dfeBool().newInstance(this);
DFEVar pipe1091_en = dfeBool().newInstance(this);
DFEVar void1081_done = dfeBool().newInstance(this);
DFEVar void1081_en = dfeBool().newInstance(this);
DFEVar void1084_done = dfeBool().newInstance(this);
DFEVar void1084_en = dfeBool().newInstance(this);
DFEVar void1079_done = dfeBool().newInstance(this);
DFEVar void1079_en = dfeBool().newInstance(this);
DFEVar FIFO1078_trashEn = dfeBool().newInstance(this); // Send stream to trash for when read is not burst-aligned
DFEVar void1082_done = dfeBool().newInstance(this);
DFEVar void1082_en = dfeBool().newInstance(this);
DFEVar pipe1091_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain1088_done = dfeBool().newInstance(this);
// Emit argin reads
DFEVar const192_FixedPoint1 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 192 ); 
DFEVar const0_FixedPoint50 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 0 ); 
DFEVar const1_FixedPoint66 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 1 ); 
}
