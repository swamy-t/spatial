package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class pipe3487_reduce_kernel extends KernelLib {
void common(DFEVector<DFEVar> Vector3476,DFEVector<DFEVar> Vector3477 /*1*/ ,
                DFEVar FixedPoint3483 /*2*/ , DFEVar FixedPoint2933,DFEVar FixedPoint2967,DFEVar FixedPoint2968,DFEVar FixedPoint3446,DFEVar const0_FixedPoint197,DFEVar const96_FixedPoint206 /*3*/) {
// For now, I just regenerate constants because java is being annoying about class extensions


DFEVar FixedPoint3478 = Vector3477[0];
DFEVar FixedPoint3479 = Vector3476[0];
DFEVar Bit2969 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2969 = FixedPoint2967 < const96_FixedPoint206;
DFEVar Bit2970 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2970 = FixedPoint2968 < const96_FixedPoint206;
DFEVar Bit2979 = Bit2969 & Bit2970;
DFEVar Bit3480 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit3480 = FixedPoint2933 < FixedPoint3446;
DFEVar Bit3481 = Bit3480 & Bit2979;
DFEVar FixedPoint3482 = Bit3481 ? FixedPoint3479 : const0_FixedPoint197 ;
FixedPoint3483 <== FixedPoint3482 + FixedPoint3478;
/* Unknown Deff Sym(3484) Vector_from_list(List(Sym(3483))) */
/* Unknown Deff Sym(3485) Par_bram_store(Sym(2925),Sym(2973),Sym(3484)) */
/* Unknown Deff Sym(3486) Reify(Const(()),Summary(mayRead(Sym(3454), Sym(2925)), mstRead(Sym(3454), Sym(2925)), mayWrite(Sym(2925)), mstWrite(Sym(2925))),List(Sym(3476), Sym(3477), Sym(3485))) */
}

pipe3487_reduce_kernel(KernelLib owner , /*1*/ DFEVector<DFEVar> Vector3476,DFEVector<DFEVar> Vector3477 , /*2*/
                DFEVar FixedPoint3483 , /*3*/  DFEVar FixedPoint2933,DFEVar FixedPoint2967,DFEVar FixedPoint2968,DFEVar FixedPoint3446,DFEVar const0_FixedPoint197,DFEVar const96_FixedPoint206) {
  super(owner);
  common(Vector3476, Vector3477 , FixedPoint3483 , FixedPoint2933,FixedPoint2967,FixedPoint2968,FixedPoint3446,const0_FixedPoint197,const96_FixedPoint206);
}
}
