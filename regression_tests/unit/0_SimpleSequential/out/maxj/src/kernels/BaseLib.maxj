package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class BaseLib extends KernelLib {
BaseLib(KernelLib owner) { super(owner); }
      SpatialUtils spatialUtils = new SpatialUtils(this);
DFEVar argin450 = io.scalarInput("argin450", dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT) );
DFEVar argin451 = io.scalarInput("argin451", dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT) );
DFEVar void476_done = dfeBool().newInstance(this);
DFEVar pipe469_done = dfeBool().newInstance(this);
DFEVar pipe469_en = dfeBool().newInstance(this);
DFEVar void474_done = dfeBool().newInstance(this);
DFEVar void474_en = dfeBool().newInstance(this);
/* Bram_new { */
BramLib BRAM455_0 = new BramLib(this, 96, 1, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), /*banks*/ 4, /* stride */ 1, 1);
/* } Bram_new */
DFEVar pipe469_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain457_done = dfeBool().newInstance(this);
DFEVar void474_rst_done = dfeBool().newInstance(this);
// Emit argin reads
DFEVar FixedPoint470 = argin451; // reg read
DFEVar FixedPoint458 = argin450; // reg read
DFEVar FixedPoint460 = argin450; // reg read
DFEVar FixedPoint461 = argin450; // reg read
DFEVar FixedPoint459 = argin450; // reg read
DFEVar const0_FixedPoint5 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 0 ); 
DFEVar const96_FixedPoint33 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 96 ); 
DFEVar const1_FixedPoint13 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 1 ); 
// Can't emit FixedPoint470
}
