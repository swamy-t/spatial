package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class pipe5791_reduce_kernel extends KernelLib {
void common(DFEVector<DFEVar> Vector5782,DFEVector<DFEVar> Vector5783 /*1*/ ,
                DFEVar FixedPoint5787 /*2*/ , DFEVar FixedPoint4879,DFEVar FixedPoint4909,DFEVar FixedPoint4910,DFEVar const0_FixedPoint189,DFEVar const96_FixedPoint423 /*3*/) {
// For now, I just regenerate constants because java is being annoying about class extensions


DFEVar FixedPoint5784 = Vector5783[0];
DFEVar Bit4908 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit4908 = FixedPoint4879 < const96_FixedPoint423;
DFEVar Bit4911 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit4911 = FixedPoint4909 < const96_FixedPoint423;
DFEVar Bit4912 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit4912 = FixedPoint4910 < const96_FixedPoint423;
DFEVar Bit4921 = Bit4911 & Bit4912;
DFEVar Bit4922 = Bit4908 & Bit4921;
DFEVar FixedPoint5785 = Vector5782[0];
DFEVar FixedPoint5786 = Bit4922 ? FixedPoint5785 : const0_FixedPoint189 ;
FixedPoint5787 <== FixedPoint5786 + FixedPoint5784;
/* Unknown Deff Sym(5788) Vector_from_list(List(Sym(5787))) */
/* Unknown Deff Sym(5789) Par_bram_store(Sym(4871),Sym(4915),Sym(5788)) */
/* Unknown Deff Sym(5790) Reify(Const(()),Summary(mayRead(Sym(5766), Sym(4871)), mstRead(Sym(5766), Sym(4871)), mayWrite(Sym(4871)), mstWrite(Sym(4871))),List(Sym(5782), Sym(5783), Sym(5789))) */
}

pipe5791_reduce_kernel(KernelLib owner , /*1*/ DFEVector<DFEVar> Vector5782,DFEVector<DFEVar> Vector5783 , /*2*/
                DFEVar FixedPoint5787 , /*3*/  DFEVar FixedPoint4879,DFEVar FixedPoint4909,DFEVar FixedPoint4910,DFEVar const0_FixedPoint189,DFEVar const96_FixedPoint423) {
  super(owner);
  common(Vector5782, Vector5783 , FixedPoint5787 , FixedPoint4879,FixedPoint4909,FixedPoint4910,const0_FixedPoint189,const96_FixedPoint423);
}
}
