package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class BaseLib extends KernelLib {
BaseLib(KernelLib owner) { super(owner); }
      SpatialUtils spatialUtils = new SpatialUtils(this);
DFEVar void5834_done = dfeBool().newInstance(this);
DFEVar metapipe5810_done = dfeBool().newInstance(this);
DFEVar metapipe5810_en = dfeBool().newInstance(this);
DFEVar metapipe5832_done = dfeBool().newInstance(this);
DFEVar metapipe5832_en = dfeBool().newInstance(this);
/* Bram_new { */
NBufKernelLib BRAM5679_0 = new NBufKernelLib(this, "BRAM5679_0",
                  96, 96, /*size0, size1*/
                  dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,1}, new int[] {1,1}, 3, /*banks, strides, depth*/
                  true, /*all_same access (row_major or col_major)*/
                  new boolean[] {true,true}, /*rowmajor read?*/
                  1, 1 /*writepar, readpar*/);
BramLib BRAM5679_1 = new BramLib(this, 96, 96, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), /*banks*/ new int[] {1,1}, /* stride */ new int[] {96,1}, 1);
/* } Bram_new */
DFEVar void5723_done = dfeBool().newInstance(this);
DFEVar void5723_en = dfeBool().newInstance(this);
DFEVar metapipe5808_done = dfeBool().newInstance(this);
DFEVar metapipe5808_en = dfeBool().newInstance(this);
/* Bram_new { */
NBufKernelLib BRAM5682_0 = new NBufKernelLib(this, "BRAM5682_0",
                  96, 96, /*size0, size1*/
                  dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,1}, new int[] {96,1}, 2, /*banks, strides, depth*/
                  true, /*all_same access (row_major or col_major)*/
                  new boolean[] {true}, /*rowmajor read?*/
                  1, 1 /*writepar, readpar*/);
/* } Bram_new */
/* Bram_new { */
NBufKernelLib BRAM5683_0 = new NBufKernelLib(this, "BRAM5683_0",
                  96, 96, /*size0, size1*/
                  dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,1}, new int[] {96,1}, 2, /*banks, strides, depth*/
                  true, /*all_same access (row_major or col_major)*/
                  new boolean[] {true}, /*rowmajor read?*/
                  1, 1 /*writepar, readpar*/);
/* } Bram_new */
DFEVar metapipe5702_done = dfeBool().newInstance(this);
DFEVar metapipe5702_en = dfeBool().newInstance(this);
DFEVar metapipe5721_done = dfeBool().newInstance(this);
DFEVar metapipe5721_en = dfeBool().newInstance(this);
DFEVar void5690_done = dfeBool().newInstance(this);
DFEVar void5690_en = dfeBool().newInstance(this);
DFEVar void5692_done = dfeBool().newInstance(this);
DFEVar void5692_en = dfeBool().newInstance(this);
DFEVar pipe5700_done = dfeBool().newInstance(this);
DFEVar pipe5700_en = dfeBool().newInstance(this);
/* Reg_new { */
NBufReg reg5687_0_lib = new NBufReg(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), "reg5687_0", 1, new Bits(dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT).getTotalBits(), 0), 2); //2 depth
/* Reg_new } */
DFEVar void5690_rst_done = dfeBool().newInstance(this);
DFEVar FIFO5684_trashEn = dfeBool().newInstance(this); // Send stream to trash for when read is not burst-aligned
DFEVar pipe5700_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5694_done = dfeBool().newInstance(this);
DFEVar void5709_done = dfeBool().newInstance(this);
DFEVar void5709_en = dfeBool().newInstance(this);
DFEVar void5711_done = dfeBool().newInstance(this);
DFEVar void5711_en = dfeBool().newInstance(this);
DFEVar pipe5719_done = dfeBool().newInstance(this);
DFEVar pipe5719_en = dfeBool().newInstance(this);
/* Reg_new { */
NBufReg reg5706_0_lib = new NBufReg(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), "reg5706_0", 1, new Bits(dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT).getTotalBits(), 0), 2); //2 depth
/* Reg_new } */
DFEVar void5709_rst_done = dfeBool().newInstance(this);
DFEVar FIFO5703_trashEn = dfeBool().newInstance(this); // Send stream to trash for when read is not burst-aligned
DFEVar pipe5719_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5713_done = dfeBool().newInstance(this);
DFEVar pipe5736_done = dfeBool().newInstance(this);
DFEVar pipe5736_en = dfeBool().newInstance(this);
DFEVar metapipe5806_done = dfeBool().newInstance(this);
DFEVar metapipe5806_en = dfeBool().newInstance(this);
/* Bram_new { */
NBufKernelLib BRAM5726_0 = new NBufKernelLib(this, "BRAM5726_0",
                  96, 96, /*size0, size1*/
                  dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,1}, new int[] {96,1}, 2, /*banks, strides, depth*/
                  true, /*all_same access (row_major or col_major)*/
                  new boolean[] {true}, /*rowmajor read?*/
                  1, 1 /*writepar, readpar*/);
/* } Bram_new */
/* Bram_new { */
NBufKernelLib BRAM5727_0 = new NBufKernelLib(this, "BRAM5727_0",
                  96, 96, /*size0, size1*/
                  dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,1}, new int[] {96,1}, 2, /*banks, strides, depth*/
                  true, /*all_same access (row_major or col_major)*/
                  new boolean[] {true}, /*rowmajor read?*/
                  1, 1 /*writepar, readpar*/);
/* } Bram_new */
DFEVar pipe5736_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5730_done = dfeBool().newInstance(this);
DFEVar pipe5747_done = dfeBool().newInstance(this);
DFEVar pipe5747_en = dfeBool().newInstance(this);
DFEVar metapipe5804_done = dfeBool().newInstance(this);
DFEVar metapipe5804_en = dfeBool().newInstance(this);
DFEVar pipe5747_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5741_done = dfeBool().newInstance(this);
/* Bram_new { */
NBufKernelLib BRAM5748_0 = new NBufKernelLib(this, "BRAM5748_0",
                  96, 96, /*size0, size1*/
                  dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,1}, new int[] {96,1}, 2, /*banks, strides, depth*/
                  true, /*all_same access (row_major or col_major)*/
                  new boolean[] {true}, /*rowmajor read?*/
                  1, 1 /*writepar, readpar*/);
/* } Bram_new */
/* Bram_new { */
BramLib BRAM5749_0 = new BramLib(this, 96, 96, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), /*banks*/ new int[] {1,1}, /* stride */ new int[] {96,1}, 1);
NBufKernelLib BRAM5749_1 = new NBufKernelLib(this, "BRAM5749_1",
                  96, 96, /*size0, size1*/
                  dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,1}, new int[] {96,1}, 2, /*banks, strides, depth*/
                  true, /*all_same access (row_major or col_major)*/
                  new boolean[] {true,true}, /*rowmajor read?*/
                  1, 1 /*writepar, readpar*/);
/* } Bram_new */
DFEVar pipe5760_done = dfeBool().newInstance(this);
DFEVar pipe5760_en = dfeBool().newInstance(this);
DFEVar metapipe5793_done = dfeBool().newInstance(this);
DFEVar metapipe5793_en = dfeBool().newInstance(this);
DFEVar pipe5802_done = dfeBool().newInstance(this);
DFEVar pipe5802_en = dfeBool().newInstance(this);
DFEVar pipe5760_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5754_done = dfeBool().newInstance(this);
DFEVar pipe5781_done = dfeBool().newInstance(this);
DFEVar pipe5781_en = dfeBool().newInstance(this);
DFEVar pipe5791_done = dfeBool().newInstance(this);
DFEVar pipe5791_en = dfeBool().newInstance(this);
/* Bram_new { */
NBufKernelLib BRAM5766_0 = new NBufKernelLib(this, "BRAM5766_0",
                  96, 96, /*size0, size1*/
                  dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,1}, new int[] {96,1}, 2, /*banks, strides, depth*/
                  true, /*all_same access (row_major or col_major)*/
                  new boolean[] {true}, /*rowmajor read?*/
                  1, 1 /*writepar, readpar*/);
/* } Bram_new */
DFEVar pipe5781_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5769_done = dfeBool().newInstance(this);
DFEVar pipe5791_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5765_done = dfeBool().newInstance(this);
DFEVar pipe5802_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5796_done = dfeBool().newInstance(this);
DFEVar void5819_done = dfeBool().newInstance(this);
DFEVar void5819_en = dfeBool().newInstance(this);
DFEVar pipe5829_done = dfeBool().newInstance(this);
DFEVar pipe5829_en = dfeBool().newInstance(this);
DFEVar void5830_done = dfeBool().newInstance(this);
DFEVar void5830_en = dfeBool().newInstance(this);
/* Reg_new { */
NBufReg reg5816_0_lib = new NBufReg(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), "reg5816_0", 1, new Bits(dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT).getTotalBits(), 0), 2); //2 depth
NBufReg reg5816_1_lib = new NBufReg(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), "reg5816_1", 1, new Bits(dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT).getTotalBits(), 0), 3); //3 depth
/* Reg_new } */
DFEVar void5819_rst_done = dfeBool().newInstance(this);
DFEVar pipe5829_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain5815_done = dfeBool().newInstance(this);
// Emit argin reads
DFEVar const96_FixedPoint423 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 96 ); 
DFEVar const0_FixedPoint189 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 0 ); 
DFEVar const512_FixedPoint447 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 512 ); 
// Can't emit FixedPoint4850
// Can't emit FixedPoint4852
// Can't emit FixedPoint4827
DFEVar const1_FixedPoint11 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 1 ); 
// Can't emit FixedPoint4805
DFEVar const9216_FixedPoint1106 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 9216 ); 
}
