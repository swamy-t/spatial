package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class pipe4427_reduce_kernel extends KernelLib {
void common(DFEVector<DFEVar> Vector4418,DFEVector<DFEVar> Vector4419 /*1*/ ,
                DFEVar FixedPoint4424 /*2*/ , DFEVar FixedPoint3689,DFEVar FixedPoint3701,DFEVar const96_FixedPoint5 /*3*/) {
// For now, I just regenerate constants because java is being annoying about class extensions


DFEVar FixedPoint4421 = Vector4418[0];
DFEVar FixedPoint4422 = Vector4419[0];
DFEVar FixedPoint4423 = FixedPoint4421 * FixedPoint4422;
FixedPoint4424 <== FixedPoint4423; // is tree result, do not add Sym(4420)
/* Unknown Deff Sym(4425) Reg_write(Sym(3693),Sym(4424),Sym(381)) */
/* Unknown Deff Sym(4426) Reify(Sym(4425),Summary(mayRead(Sym(4367), Sym(4370), Sym(3693)), mstRead(Sym(4367), Sym(4370), Sym(3693)), mayWrite(Sym(3693)), mstWrite(Sym(3693))),List(Sym(4418), Sym(4419), Sym(4420), Sym(4425))) */
}

pipe4427_reduce_kernel(KernelLib owner , /*1*/ DFEVector<DFEVar> Vector4418,DFEVector<DFEVar> Vector4419 , /*2*/
                DFEVar FixedPoint4424 , /*3*/  DFEVar FixedPoint3689,DFEVar FixedPoint3701,DFEVar const96_FixedPoint5) {
  super(owner);
  common(Vector4418, Vector4419 , FixedPoint4424 , FixedPoint3689,FixedPoint3701,const96_FixedPoint5);
}
}
