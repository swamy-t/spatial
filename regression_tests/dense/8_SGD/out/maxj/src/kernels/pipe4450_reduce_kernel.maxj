package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class pipe4450_reduce_kernel extends KernelLib {
void common(DFEVector<DFEVar> Vector4441,DFEVector<DFEVar> Vector4442 /*1*/ ,
                DFEVar FixedPoint4447 /*2*/ , DFEVar FixedPoint3732,DFEVar FixedPoint3744,DFEVar const96_FixedPoint5 /*3*/) {
// For now, I just regenerate constants because java is being annoying about class extensions


DFEVar FixedPoint4444 = Vector4441[0];
DFEVar FixedPoint4445 = Vector4442[0];
DFEVar FixedPoint4446 = FixedPoint4444 * FixedPoint4445;
FixedPoint4447 <== FixedPoint4446; // is tree result, do not add Sym(4443)
/* Unknown Deff Sym(4448) Reg_write(Sym(3736),Sym(4447),Sym(381)) */
/* Unknown Deff Sym(4449) Reify(Sym(4448),Summary(mayRead(Sym(4367), Sym(4371), Sym(3736)), mstRead(Sym(4367), Sym(4371), Sym(3736)), mayWrite(Sym(3736)), mstWrite(Sym(3736))),List(Sym(4441), Sym(4442), Sym(4443), Sym(4448))) */
}

pipe4450_reduce_kernel(KernelLib owner , /*1*/ DFEVector<DFEVar> Vector4441,DFEVector<DFEVar> Vector4442 , /*2*/
                DFEVar FixedPoint4447 , /*3*/  DFEVar FixedPoint3732,DFEVar FixedPoint3744,DFEVar const96_FixedPoint5) {
  super(owner);
  common(Vector4441, Vector4442 , FixedPoint4447 , FixedPoint3732,FixedPoint3744,const96_FixedPoint5);
}
}
