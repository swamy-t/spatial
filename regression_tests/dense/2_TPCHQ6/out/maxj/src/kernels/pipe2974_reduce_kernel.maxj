package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class pipe2974_reduce_kernel extends KernelLib {
void common(DFEVector<DFEVar> Vector2935,DFEVector<DFEVar> Vector2936,DFEVector<DFEVar> Vector2937,DFEVector<DFEVar> Vector2938 /*1*/ ,
                DFEVar FixedPoint2971 /*2*/ , DFEVar const0_FixedPoint195,DFEVar const0_FixedPoint221,DFEVar const24_FixedPoint303,DFEVar const9999_FixedPoint295,DFEVar const9999_FixedPoint300 /*3*/) {
// For now, I just regenerate constants because java is being annoying about class extensions


DFEVar FixedPoint2940 = Vector2935[0];
DFEVar Bit2941 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2941 = const0_FixedPoint221 < FixedPoint2940;
DFEVar Bit2942 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2942 = FixedPoint2940 < const9999_FixedPoint295;
DFEVar Bit2943 = Bit2941 & Bit2942;
DFEVar FixedPoint2944 = Vector2936[0];
DFEVar Bit2945 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2945 = const0_FixedPoint195 <= FixedPoint2944;
DFEVar Bit2946 = Bit2943 & Bit2945;
DFEVar Bit2947 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2947 = FixedPoint2944 <= const9999_FixedPoint300;
DFEVar Bit2948 = Bit2946 & Bit2947;
DFEVar FixedPoint2949 = Vector2937[0];
DFEVar Bit2950 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2950 = FixedPoint2949 < const24_FixedPoint303;
DFEVar Bit2951 = Bit2948 & Bit2950;
DFEVar FixedPoint2952 = Vector2938[0];
DFEVar FixedPoint2953 = FixedPoint2952 * FixedPoint2944;
DFEVar FixedPoint2954 = Bit2951 ? FixedPoint2953 : const0_FixedPoint195 ;
DFEVar FixedPoint2955 = Vector2935[1];
DFEVar Bit2956 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2956 = const0_FixedPoint221 < FixedPoint2955;
DFEVar Bit2957 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2957 = FixedPoint2955 < const9999_FixedPoint295;
DFEVar Bit2958 = Bit2956 & Bit2957;
DFEVar FixedPoint2959 = Vector2936[1];
DFEVar Bit2960 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2960 = const0_FixedPoint195 <= FixedPoint2959;
DFEVar Bit2961 = Bit2958 & Bit2960;
DFEVar Bit2962 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2962 = FixedPoint2959 <= const9999_FixedPoint300;
DFEVar Bit2963 = Bit2961 & Bit2962;
DFEVar FixedPoint2964 = Vector2937[1];
DFEVar Bit2965 = dfeFixOffset(1, 0, SignMode.UNSIGNED).newInstance(this);
Bit2965 = FixedPoint2964 < const24_FixedPoint303;
DFEVar Bit2966 = Bit2963 & Bit2965;
DFEVar FixedPoint2967 = Vector2938[1];
DFEVar FixedPoint2968 = FixedPoint2967 * FixedPoint2959;
DFEVar FixedPoint2969 = Bit2966 ? FixedPoint2968 : const0_FixedPoint195 ;
DFEVar FixedPoint2970 = FixedPoint2954 + FixedPoint2969;
FixedPoint2971 <== FixedPoint2970; // is tree result, do not add Sym(2939)
/* Unknown Deff Sym(2972) Reg_write(Sym(2393),Sym(2971),Sym(316)) */
/* Unknown Deff Sym(2973) Reify(Sym(2972),Summary(mayRead(Sym(2772), Sym(2776), Sym(2774), Sym(2778), Sym(2393)), mstRead(Sym(2772), Sym(2776), Sym(2774), Sym(2778), Sym(2393)), mayWrite(Sym(2393)), mstWrite(Sym(2393))),List(Sym(2935), Sym(2936), Sym(2937), Sym(2938), Sym(2939), Sym(2972))) */
}

pipe2974_reduce_kernel(KernelLib owner , /*1*/ DFEVector<DFEVar> Vector2935,DFEVector<DFEVar> Vector2936,DFEVector<DFEVar> Vector2937,DFEVector<DFEVar> Vector2938 , /*2*/
                DFEVar FixedPoint2971 , /*3*/  DFEVar const0_FixedPoint195,DFEVar const0_FixedPoint221,DFEVar const24_FixedPoint303,DFEVar const9999_FixedPoint295,DFEVar const9999_FixedPoint300) {
  super(owner);
  common(Vector2935, Vector2936, Vector2937, Vector2938 , FixedPoint2971 , const0_FixedPoint195,const0_FixedPoint221,const24_FixedPoint303,const9999_FixedPoint295,const9999_FixedPoint300);
}
}
