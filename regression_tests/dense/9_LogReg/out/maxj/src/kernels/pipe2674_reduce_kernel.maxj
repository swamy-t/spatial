package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class pipe2674_reduce_kernel extends KernelLib {
void common(DFEVector<DFEVar> Vector2653,DFEVector<DFEVar> Vector2654 /*1*/ ,
                DFEVar FloatPoint2671 /*2*/ , DFEVar FixedPoint2110,DFEVar FixedPoint2124,DFEVar FixedPoint2125,DFEVar FixedPoint2126,DFEVar FixedPoint2127,DFEVar const384_FixedPoint5 /*3*/) {
// For now, I just regenerate constants because java is being annoying about class extensions


/* Unknown Deff Sym(362) ConstBit(true) */
DFEVar FloatPoint2656 = Vector2653[0];
DFEVar FloatPoint2657 = Vector2654[0];
DFEVar FloatPoint2658 = FloatPoint2656 * FloatPoint2657;
DFEVar FloatPoint2659 = Vector2653[1];
DFEVar FloatPoint2660 = Vector2654[1];
DFEVar FloatPoint2661 = FloatPoint2659 * FloatPoint2660;
DFEVar FloatPoint2662 = FloatPoint2658 + FloatPoint2661;
DFEVar FloatPoint2663 = Vector2653[2];
DFEVar FloatPoint2664 = Vector2654[2];
DFEVar FloatPoint2665 = FloatPoint2663 * FloatPoint2664;
DFEVar FloatPoint2666 = Vector2653[3];
DFEVar FloatPoint2667 = Vector2654[3];
DFEVar FloatPoint2668 = FloatPoint2666 * FloatPoint2667;
DFEVar FloatPoint2669 = FloatPoint2665 + FloatPoint2668;
DFEVar FloatPoint2670 = FloatPoint2662 + FloatPoint2669;
FloatPoint2671 <== FloatPoint2670; // is tree result, do not add Sym(2655)
/* Unknown Deff Sym(2672) Reg_write(Sym(2116),Sym(2671),Sym(362)) */
/* Unknown Deff Sym(2673) Reify(Sym(2672),Summary(mayRead(Sym(2602), Sym(2580), Sym(2116)), mstRead(Sym(2602), Sym(2580), Sym(2116)), mayWrite(Sym(2116)), mstWrite(Sym(2116))),List(Sym(2653), Sym(2654), Sym(2655), Sym(2672))) */
}

pipe2674_reduce_kernel(KernelLib owner , /*1*/ DFEVector<DFEVar> Vector2653,DFEVector<DFEVar> Vector2654 , /*2*/
                DFEVar FloatPoint2671 , /*3*/  DFEVar FixedPoint2110,DFEVar FixedPoint2124,DFEVar FixedPoint2125,DFEVar FixedPoint2126,DFEVar FixedPoint2127,DFEVar const384_FixedPoint5) {
  super(owner);
  common(Vector2653, Vector2654 , FloatPoint2671 , FixedPoint2110,FixedPoint2124,FixedPoint2125,FixedPoint2126,FixedPoint2127,const384_FixedPoint5);
}
}
