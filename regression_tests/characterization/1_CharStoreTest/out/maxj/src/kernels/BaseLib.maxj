package engine;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Counter;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.CounterChain;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.WrapMode;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.Params;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.memory.Memory;
import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.utils.MathUtils;
import com.maxeler.maxcompiler.v2.utils.Bits;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelLib;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.OffsetExpr;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import com.maxeler.maxcompiler.v2.kernelcompiler.SMIO;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVector;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.composite.DFEVectorType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEFix.SignMode;
import java.util.Arrays;
class BaseLib extends KernelLib {
BaseLib(KernelLib owner) { super(owner); }
      SpatialUtils spatialUtils = new SpatialUtils(this);
DFEVar argin1710 = io.scalarInput("argin1710", dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT) );
DFEVar argin1711 = io.scalarInput("argin1711", dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT) );
DFEVar void1847_done = dfeBool().newInstance(this);
DFEVar seq1845_done = dfeBool().newInstance(this);
DFEVar seq1845_en = dfeBool().newInstance(this);
DFEVar void1745_done = dfeBool().newInstance(this);
DFEVar void1745_en = dfeBool().newInstance(this);
DFEVar void1843_done = dfeBool().newInstance(this);
DFEVar void1843_en = dfeBool().newInstance(this);
/* Bram_new { */
DummyMemLib BRAM1721_0 = new DummyMemLib(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,4}); //dummymem
/* } Bram_new */
/* Bram_new { */
DummyMemLib BRAM1722_0 = new DummyMemLib(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,4}); //dummymem
/* } Bram_new */
/* Bram_new { */
DummyMemLib BRAM1723_0 = new DummyMemLib(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,4}); //dummymem
/* } Bram_new */
/* Bram_new { */
DummyMemLib BRAM1724_0 = new DummyMemLib(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), new int[] {1,4}); //dummymem
/* } Bram_new */
DFEVar void1728_done = dfeBool().newInstance(this);
DFEVar void1728_en = dfeBool().newInstance(this);
DFEVar void1733_done = dfeBool().newInstance(this);
DFEVar void1733_en = dfeBool().newInstance(this);
DFEVar void1738_done = dfeBool().newInstance(this);
DFEVar void1738_en = dfeBool().newInstance(this);
DFEVar void1743_done = dfeBool().newInstance(this);
DFEVar void1743_en = dfeBool().newInstance(this);
DFEVar void1728_rst_done = dfeBool().newInstance(this);
DFEVar void1733_rst_done = dfeBool().newInstance(this);
DFEVar void1738_rst_done = dfeBool().newInstance(this);
DFEVar void1743_rst_done = dfeBool().newInstance(this);
DFEVar void1769_done = dfeBool().newInstance(this);
DFEVar void1769_en = dfeBool().newInstance(this);
DFEVar void1793_done = dfeBool().newInstance(this);
DFEVar void1793_en = dfeBool().newInstance(this);
DFEVar void1817_done = dfeBool().newInstance(this);
DFEVar void1817_en = dfeBool().newInstance(this);
DFEVar void1841_done = dfeBool().newInstance(this);
DFEVar void1841_en = dfeBool().newInstance(this);
DFEVar metapipe1767_done = dfeBool().newInstance(this);
DFEVar metapipe1767_en = dfeBool().newInstance(this);
DFEVar pipe1759_done = dfeBool().newInstance(this);
DFEVar pipe1759_en = dfeBool().newInstance(this);
DFEVar void1763_done = dfeBool().newInstance(this);
DFEVar void1763_en = dfeBool().newInstance(this);
DFEVar void1765_done = dfeBool().newInstance(this);
DFEVar void1765_en = dfeBool().newInstance(this);
DFEVar pipe1759_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain1750_done = dfeBool().newInstance(this);
/* Reg_new { */
NBufReg reg1760_0_lib = new NBufReg(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), "reg1760_0", 1, new Bits(dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT).getTotalBits(), 0), 2); //2 depth
/* Reg_new } */
DFEVar void1763_rst_done = dfeBool().newInstance(this);
DFEVar metapipe1791_done = dfeBool().newInstance(this);
DFEVar metapipe1791_en = dfeBool().newInstance(this);
DFEVar pipe1783_done = dfeBool().newInstance(this);
DFEVar pipe1783_en = dfeBool().newInstance(this);
DFEVar void1787_done = dfeBool().newInstance(this);
DFEVar void1787_en = dfeBool().newInstance(this);
DFEVar void1789_done = dfeBool().newInstance(this);
DFEVar void1789_en = dfeBool().newInstance(this);
DFEVar pipe1783_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain1774_done = dfeBool().newInstance(this);
/* Reg_new { */
NBufReg reg1784_0_lib = new NBufReg(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), "reg1784_0", 1, new Bits(dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT).getTotalBits(), 0), 2); //2 depth
/* Reg_new } */
DFEVar void1787_rst_done = dfeBool().newInstance(this);
DFEVar metapipe1815_done = dfeBool().newInstance(this);
DFEVar metapipe1815_en = dfeBool().newInstance(this);
DFEVar pipe1807_done = dfeBool().newInstance(this);
DFEVar pipe1807_en = dfeBool().newInstance(this);
DFEVar void1811_done = dfeBool().newInstance(this);
DFEVar void1811_en = dfeBool().newInstance(this);
DFEVar void1813_done = dfeBool().newInstance(this);
DFEVar void1813_en = dfeBool().newInstance(this);
DFEVar pipe1807_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain1798_done = dfeBool().newInstance(this);
/* Reg_new { */
NBufReg reg1808_0_lib = new NBufReg(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), "reg1808_0", 1, new Bits(dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT).getTotalBits(), 0), 2); //2 depth
/* Reg_new } */
DFEVar void1811_rst_done = dfeBool().newInstance(this);
DFEVar metapipe1839_done = dfeBool().newInstance(this);
DFEVar metapipe1839_en = dfeBool().newInstance(this);
DFEVar pipe1831_done = dfeBool().newInstance(this);
DFEVar pipe1831_en = dfeBool().newInstance(this);
DFEVar void1835_done = dfeBool().newInstance(this);
DFEVar void1835_en = dfeBool().newInstance(this);
DFEVar void1837_done = dfeBool().newInstance(this);
DFEVar void1837_en = dfeBool().newInstance(this);
DFEVar pipe1831_rst_done = dfeBool().newInstance(this);
DFEVar CounterChain1822_done = dfeBool().newInstance(this);
/* Reg_new { */
NBufReg reg1832_0_lib = new NBufReg(this, dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), "reg1832_0", 1, new Bits(dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT).getTotalBits(), 0), 2); //2 depth
/* Reg_new } */
DFEVar void1835_rst_done = dfeBool().newInstance(this);
// Emit argin reads
DFEVar FixedPoint1729 = argin1711; // reg read
DFEVar FixedPoint1739 = argin1711; // reg read
DFEVar FixedPoint1725 = argin1711; // reg read
DFEVar FixedPoint1718 = argin1710; // reg read
DFEVar FixedPoint1734 = argin1711; // reg read
DFEVar const3_FixedPoint99 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 3 ); 
DFEVar const4_FixedPoint5 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 4 ); 
DFEVar const0_FixedPoint53 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 0 ); 
DFEVar const512_FixedPoint111 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 512 ); 
DFEVar const1_FixedPoint66 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 1 ); 
DFEVar const368640_FixedPoint354 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 368640 ); 
DFEVar const192_FixedPoint58 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 192 ); 
DFEVar const1920_FixedPoint59 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 1920 ); 
DFEVar const2_FixedPoint93 = constant.var( dfeFixOffset( 32,0, SignMode.TWOSCOMPLEMENT), 2 ); 
}
